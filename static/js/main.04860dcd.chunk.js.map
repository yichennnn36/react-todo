{"version":3,"sources":["components/TodoFilterButton.js","components/TodoItem.js","custom_hooks/useInput.js","custom_hooks/useTodos.js","TodoApp.js","index.js"],"names":["FilterButtonBlock","styled","div","ModeFilterButton","TheClearAllButton","DefaultButton","button","props","theme","colors","light","secondary","ButtonFilterAll","ButtonFilterActive","ButtonFilterCompleted","ButtonClearAll","normal","TodoFilterButton","handleClickAll","handleClickActive","handlClickCompleted","handleClearAllCompleted","onClick","TodoBlock","border","Todo","TodoCheck","input","primary","TodoEditInput","TodoFunctionButton","TodoItem","todo","handleDeleteTodo","handleToggleIsChecked","handleEditTodo","useState","isEditing","setEditing","newTodo","setNewTodo","editingTemplate","className","type","id","defaultChecked","isChecked","value","onChange","e","target","viewTemplate","htmlFor","content","data-todo-id","useInput","inputValue","setInputValue","handleInputChange","useTodos","useRef","console","log","todoData","JSON","parse","window","localStorage","getItem","length","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","handleAddTodo","useCallback","trim","alert","filter","setFilter","handleKeyPress","key","map","filterMap","All","Active","Completed","Container","TodoTittle","h1","TodoInputBlock","TodoInput","InputButton","dark","TodoItemBlock","TodoApp","placeholder","onKeyPress","App","ReactDOM","render","document","getElementById"],"mappings":"gNAKMA,EAAoBC,IAAOC,IAAV,6MAUjBC,EAAmBF,IAAOC,IAAV,kDAGhBE,EAAoBH,IAAOC,IAAV,2IAQjBG,EAAgBJ,IAAOK,OAAV,2RACG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SASrC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAMnCC,EAAkBX,YAAOI,EAAPJ,CAAH,0BACfY,EAAqBZ,YAAOI,EAAPJ,CAAH,0BAClBa,EAAwBb,YAAOI,EAAPJ,CAAH,0BACrBc,EAAiBd,YAAOI,EAAPJ,CAAH,sDACE,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,UAmBnCC,EAhBU,SAAC,GAAyF,IAAvFC,EAAsF,EAAtFA,eAAgBC,EAAsE,EAAtEA,kBAAmBC,EAAmD,EAAnDA,oBAAqBC,EAA8B,EAA9BA,wBAElF,OACE,eAACrB,EAAD,WACE,eAACG,EAAD,WACE,cAACS,EAAD,CAAiBU,QAAS,kBAAMJ,KAAhC,iBACA,cAACL,EAAD,CAAoBS,QAAS,kBAAMH,KAAnC,oBACA,cAACL,EAAD,CAAuBQ,QAAS,kBAAMF,KAAtC,0BAEF,cAAChB,EAAD,UACE,cAACW,EAAD,CAAgBO,QAAS,kBAAMD,KAA/B,mC,OCrDFE,EAAYtB,IAAOC,IAAV,icACO,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOe,UAuB5CC,EAAOxB,IAAOC,IAAV,0FAMJwB,EAAYzB,IAAO0B,MAAV,+ZAGO,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,WAG1B,SAAArB,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAChC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAG5B,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,UAEpB,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAI3C,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOO,UAQnCa,EAAgB5B,IAAO0B,MAAV,mOAIG,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,WAI9B,SAAArB,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAEpB,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAIlDoB,EAAqB7B,IAAOC,IAAV,iXAUX,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,WAQ5B,SAAArB,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,aAmE1BoB,EA9DE,SAAC,GAAuE,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,iBAAkBC,EAA4C,EAA5CA,sBAAuBC,EAAqB,EAArBA,eAAqB,EAUtDC,oBAAS,GAV6C,mBAU/EC,EAV+E,KAUpEC,EAVoE,OAWxDF,mBAAS,IAX+C,mBAW/EG,EAX+E,KAWtEC,EAXsE,KA8BhFC,EACJ,gCACE,cAAChB,EAAD,UACE,cAACI,EAAD,CAAea,UAAU,mBAAmBC,KAAK,OAAOC,GAAIZ,EAAKY,GAAIC,eAAgBb,EAAKc,UAAWC,MAAOR,EAASS,SAZjG,SAACC,GACzBT,EAAWS,EAAEC,OAAOH,YAalB,eAACjB,EAAD,WACE,wBAAQY,UAAU,WAAWpB,QAXhB,WACjBa,EAAeH,EAAKY,GAAIL,GACxBD,GAAW,IASP,kBACA,wBAAQI,UAAU,aAAapB,QApBhB,WACnBgB,GAAW,IAmBP,0BAKAa,EACJ,gCACE,eAAC1B,EAAD,WACE,cAACC,EAAD,CAAWgB,UAAU,mBAAmBC,KAAK,WAAWC,GAAIZ,EAAKY,GAAIC,eAAgBb,EAAKc,UAAWE,SAvCtF,WACnBd,EAAsBF,EAAKY,OAuCvB,uBAAOQ,QAASpB,EAAKY,GAArB,SAA0BZ,EAAKqB,aAEjC,eAACvB,EAAD,WACE,wBAAQY,UAAU,WAAWpB,QApChB,WACjBgB,GAAW,GACXE,EAAWR,EAAKqB,UAkCZ,kBACA,wBAAQX,UAAU,aAAapB,QAhDhB,WACnBW,EAAiBD,EAAKY,KA+ClB,qBAKN,OACE,cAACrB,EAAD,CAAW+B,eAActB,EAAKY,GAA9B,SACGP,EAAYI,EAAkBU,K,eC9ItBI,EAVE,WAAO,IAAD,EACenB,mBAAS,IADxB,mBACdoB,EADc,KACFC,EADE,KAKrB,MAAO,CACLD,aAAYC,gBAAeC,kBAJH,SAACT,GACzBQ,EAAcR,EAAEC,OAAOH,UCuGZY,EArGE,WACf,IAAIf,EAAKgB,iBAAO,GADK,EAEoCL,IAAjDC,EAFa,EAEbA,WAAYC,EAFC,EAEDA,cAAeC,EAFd,EAEcA,kBAFd,EAGKtB,oBAAS,WAEjCyB,QAAQC,IAAI,QACZ,IAAIC,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,GAMnE,OALIL,EAASM,OAAS,EACpBzB,EAAG0B,QAAUP,EAASA,EAASM,OAAS,GAAGzB,GAAK,EAEhDmB,EAAW,GAENA,KAZY,mBAGdQ,EAHc,KAGPC,EAHO,KAerBC,qBAAU,YAnBqB,SAACF,GAChCL,OAAOC,aAAaO,QAAQ,QAASV,KAAKW,UAAUJ,IAmBlDK,CAAyBL,KACxB,CAACA,IAEJ,IAAMM,EAAgBC,uBAAY,WAChC,IAAKtB,EAAWuB,OAAQ,OAAOC,MAAM,oDAErCR,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAClB3B,GAAIA,EAAG0B,QACPjB,QAASG,EACTV,WAAW,MAEbW,EAAc,IACdb,EAAG0B,YACF,CAACE,EAAUf,EAAeD,EAAYe,IA7BpB,EA4DOnC,mBAAS,OA5DhB,mBA4Dd6C,EA5Dc,KA4DNC,EA5DM,KAgFrB,MAAO,CACL1B,aACAC,gBACAC,oBACAmB,gBACAN,QACAC,WACA5B,KACAuC,eAzDqB,SAAClC,GACR,UAAVA,EAAEmC,KACNP,KAwDA5C,iBArDuB,SAAAW,GACvB4B,EAASD,EAAMU,QAAO,SAAAjD,GAAI,OAAIA,EAAKY,KAAOA,OAqD1CV,sBAlD4B,SAAAU,GAC5B4B,EAASD,EAAMc,KAAI,SAAArD,GACjB,OAAIA,EAAKY,KAAOA,EAAWZ,EACpB,2BACFA,GADL,IAEEc,WAAYd,EAAKc,iBA8CrBX,eAzCqB,SAACS,EAAIL,GAC1BiC,EAASD,EAAMc,KAAI,SAAArD,GACjB,OAAIA,EAAKY,KAAOA,EAAWZ,EACpB,2BACFA,GADL,IAEEqB,QAASd,SAqCb0C,SACAK,UAhCgB,CAChBC,IAAK,kBAAM,GACXC,OAAQ,SAAAxD,GAAI,OAAKA,EAAKc,WACtB2C,UAAW,SAAAzD,GAAI,OAAIA,EAAKc,YA8BxB5B,eA3BqB,WACrBgE,EAAU,QA2BV/D,kBAzBwB,WACxB+D,EAAU,WAyBV9D,oBAvB0B,WAC1B8D,EAAU,cAuBV7D,wBArB8B,WAC9BmD,EAASD,EAAMU,QAAO,SAAAjD,GAAI,OAAKA,EAAKc,iBC3ElC4C,EAAYzF,IAAOC,IAAV,uJAQTyF,EAAa1F,IAAO2F,GAAV,uFAGL,SAAArF,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,WAGjCiE,EAAiB5F,IAAOC,IAAV,kGAMd4F,EAAY7F,IAAO0B,MAAV,0NAOO,SAAApB,GAAK,OAAIA,EAAMC,MAAMC,OAAOe,UAI5CuE,EAAc9F,IAAOK,OAAV,0MAIK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAG5B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOuF,QAG5CC,EAAgBhG,IAAOC,IAAV,0BAgDJgG,GA9CC,WAAO,IAAD,EAgBhBvC,IAdFH,EAFkB,EAElBA,WACAE,EAHkB,EAGlBA,kBACAa,EAJkB,EAIlBA,MACAM,EALkB,EAKlBA,cACAM,EANkB,EAMlBA,eACAlD,EAPkB,EAOlBA,iBACAC,EARkB,EAQlBA,sBACAC,EATkB,EASlBA,eACA8C,EAVkB,EAUlBA,OACAK,EAXkB,EAWlBA,UACApE,EAZkB,EAYlBA,eACAC,EAbkB,EAalBA,kBACAC,EAdkB,EAclBA,oBACAC,EAfkB,EAelBA,wBAGF,OACE,eAACqE,EAAD,WACE,cAACC,EAAD,CAAYjD,UAAU,sCAAtB,kBACA,eAACmD,EAAD,WACE,cAACC,EAAD,CACEnD,KAAK,OACLwD,YAAY,yBACZpD,MAAOS,EACPR,SAAUU,EACV0C,WAAYjB,IACd,cAACY,EAAD,CAAazE,QAASuD,EAAtB,oBAEF,cAACoB,EAAD,UAEI1B,EACGU,OAAOK,EAAUL,IACjBI,KAAI,SAAArD,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,EAAMC,iBAAkBA,EAAkBC,sBAAuBA,EAAuBC,eAAgBA,GAAvHH,EAAKY,SAGvC,cAAC,EAAD,CACE1B,eAAgBA,EAChBC,kBAAmBA,EACnBC,oBAAqBA,EACrBC,wBAAyBA,QC5EjC,SAASgF,KACP,OAAO,cAAC,GAAD,IAGTC,IAASC,OACP,cAAC,IAAD,CAAe/F,MAhBH,CACZC,OAAQ,CACNmB,QAAS,UACTjB,UAAW,UACXK,OAAQ,UACRQ,OAAQ,UACRd,MAAO,UACPsF,KAAM,YASR,SACE,cAACK,GAAD,MAEFG,SAASC,eAAe,U","file":"static/js/main.04860dcd.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport '../styles.css';\n\n// TodoFilterButton style components\nconst FilterButtonBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n\n  @media screen and (min-width:768px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nconst ModeFilterButton = styled.div`\n  text-align: right;\n`;\nconst TheClearAllButton = styled.div`\n  text-align: right;\n  margin-top: 20px;\n\n  @media screen and (min-width:768px) {\n    margin-top: 0;\n  }\n`;\nconst DefaultButton = styled.button`\n  background-color: ${props => props.theme.colors.light};\n  border-color: transparent;\n  padding: 6px 8px;\n  font-size: 18px;\n  border-radius: 6px;\n  transition: transform .2s;\n\n  &:hover {\n    transform: scale(1.1);\n    color: ${props => props.theme.colors.secondary};\n  }\n  & + & {\n    margin-left: 10px;\n  }\n`;\nconst ButtonFilterAll = styled(DefaultButton)``;\nconst ButtonFilterActive = styled(DefaultButton)``;\nconst ButtonFilterCompleted = styled(DefaultButton)``;\nconst ButtonClearAll = styled(DefaultButton)`\n  background-color: ${props => props.theme.colors.normal};\n`;\n\nconst TodoFilterButton = ({ handleClickAll, handleClickActive, handlClickCompleted, handleClearAllCompleted }) => {\n\n  return (\n    <FilterButtonBlock>\n      <ModeFilterButton>\n        <ButtonFilterAll onClick={() => handleClickAll()}>All</ButtonFilterAll>\n        <ButtonFilterActive onClick={() => handleClickActive()}>Active</ButtonFilterActive>\n        <ButtonFilterCompleted onClick={() => handlClickCompleted()}>Completed</ButtonFilterCompleted>\n      </ModeFilterButton>\n      <TheClearAllButton>\n        <ButtonClearAll onClick={() => handleClearAllCompleted()}>Clear completed</ButtonClearAll>\n      </TheClearAllButton>\n    </FilterButtonBlock>\n  )\n}\n\nexport default TodoFilterButton;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport '../styles.css';\n\n// style components\n// TodoItem style components\nconst TodoBlock = styled.div`\n  border: 1px solid ${props => props.theme.colors.border};\n\n  & div {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 60px;\n    font-size: 22px;\n    padding: 10px;\n  }\n  &:first-child {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n  }\n  &:last-child {\n    border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n  }\n  & + & {\n    border-top-width: 0;\n  }\n`;\n\nconst Todo = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst TodoCheck = styled.input`\n  margin: 0 16px 0 10px;\n  font-size: 18px;\n  border: 2px solid ${props => props.theme.colors.primary};\n\n  &:checked {\n    background-color: ${props => props.theme.colors.secondary};\n    border-color: ${props => props.theme.colors.secondary};\n  }\n  &:focus {\n    border-color: ${props => props.theme.colors.normal};\n    outline: 0;\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.light};;\n  }\n  &:checked ~ label {\n    text-decoration: line-through;\n    color: ${props => props.theme.colors.normal};\n    font-style: italic;\n  }\n  & ~ label {\n    font-size: 20px; \n  }\n`;\n\nconst TodoEditInput = styled.input`\n  min-width: 200px;\n  height: 36px;\n  padding: 10px;\n  border: 2px solid ${props => props.theme.colors.primary};\n  border-radius: 6px;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.secondary};\n    outline: 0;\n    box-shadow: 0 0 0 5px ${props => props.theme.colors.light};;\n  }\n`;\n\nconst TodoFunctionButton = styled.div`\n  font-size: 20px;\n\n  @media screen and (min-width:768px) {\n    font-size: 24px;\n  }\n\n  & button {\n    border-color: transparent;\n    background-color: transparent;\n    color: ${props => props.theme.colors.primary};\n    margin-right: 6px;\n\n    @media screen and (min-width:768px) {\n      margin-right: 10px;\n    }\n  }\n  & button:hover {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\n\nconst TodoItem = ({ todo, handleDeleteTodo, handleToggleIsChecked, handleEditTodo }) => {\n\n  const handleDelete = () => {\n    handleDeleteTodo(todo.id);\n  }\n\n  const handleToggle = () => {\n    handleToggleIsChecked(todo.id);\n  }\n\n  const [isEditing, setEditing] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n\n  const handleEdit = () => {\n    setEditing(true);\n    setNewTodo(todo.content);\n  }\n  const handleCancle = () => {\n    setEditing(false);\n  }\n\n  const handleInputChange = (e) => {\n    setNewTodo(e.target.value);\n  }\n\n  const handleSave = () => {\n    handleEditTodo(todo.id, newTodo);\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <div>\n      <Todo>\n        <TodoEditInput className=\"form-check-input\" type=\"text\" id={todo.id} defaultChecked={todo.isChecked} value={newTodo} onChange={handleInputChange} />\n      </Todo>\n      <TodoFunctionButton>\n        <button className=\"save-btn\" onClick={handleSave}>SAVE</button>\n        <button className=\"cancel-btn\" onClick={handleCancle}>CANCEL</button>\n      </TodoFunctionButton>\n    </div>\n  );\n\n  const viewTemplate = (\n    <div>\n      <Todo>\n        <TodoCheck className=\"form-check-input\" type=\"checkbox\" id={todo.id} defaultChecked={todo.isChecked} onChange={handleToggle} />\n        <label htmlFor={todo.id}>{todo.content}</label>\n      </Todo>\n      <TodoFunctionButton>\n        <button className=\"edit-btn\" onClick={handleEdit}>EDIT</button>\n        <button className=\"delete-btn\" onClick={handleDelete}>X</button>\n      </TodoFunctionButton>\n    </div>\n  );\n\n  return (\n    <TodoBlock data-todo-id={todo.id}>\n      {isEditing ? editingTemplate : viewTemplate}\n    </TodoBlock>\n  )\n}\n\nexport default TodoItem;\n","import { useState } from 'react';\n\nconst useInput = () => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  return {\n    inputValue, setInputValue, handleInputChange\n  };\n};\n\nexport default useInput;","import { useRef, useState, useEffect, useCallback } from 'react';\nimport useInput from './useInput';\n\nconst writeTodosToLocalStorage = (todos) => {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nconst useTodos = () => {\n  let id = useRef(1);\n  const { inputValue, setInputValue, handleInputChange } = useInput();\n  const [todos, setTodos] = useState(() => {\n    // run lazy initializers\n    console.log('init');\n    let todoData = JSON.parse(window.localStorage.getItem(\"todos\")) || [];\n    if (todoData.length > 0) {\n      id.current = todoData[todoData.length - 1].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n\n  const handleAddTodo = useCallback(() => {\n    if (!inputValue.trim()) return alert('請輸入代辦事項！');\n\n    setTodos([...todos, {\n      id: id.current,\n      content: inputValue,\n      isChecked: false,\n    }]);\n    setInputValue('');\n    id.current++;\n  }, [setTodos, setInputValue, inputValue, todos]);\n\n  const handleKeyPress = (e) => {\n    if (e.key !== 'Enter') return;\n    handleAddTodo();\n  }\n\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleToggleIsChecked = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isChecked: !todo.isChecked,\n      }\n    }))\n  };\n\n  const handleEditTodo = (id, newTodo) => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return {\n        ...todo,\n        content: newTodo,\n      }\n    }))\n  };\n\n  const [filter, setFilter] = useState('All');\n  const filterMap = {\n    All: () => true,\n    Active: todo => !todo.isChecked,\n    Completed: todo => todo.isChecked\n  };\n\n  const handleClickAll = () => {\n    setFilter('All');\n  }\n  const handleClickActive = () => {\n    setFilter('Active');\n  }\n  const handlClickCompleted = () => {\n    setFilter('Completed');\n  }\n  const handleClearAllCompleted = () => {\n    setTodos(todos.filter(todo => !todo.isChecked));\n  }\n\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n    handleAddTodo,\n    todos,\n    setTodos,\n    id,\n    handleKeyPress,\n    handleDeleteTodo,\n    handleToggleIsChecked,\n    handleEditTodo,\n    filter,\n    filterMap,\n    handleClickAll,\n    handleClickActive,\n    handlClickCompleted,\n    handleClearAllCompleted,\n  };\n}\n\nexport default useTodos;","import React from 'react';\nimport styled from 'styled-components';\nimport TodoFilterButton from './components/TodoFilterButton';\nimport TodoItem from './components/TodoItem';\nimport useTodos from './custom_hooks/useTodos';\nimport './styles.css';\n\n// style components\n// TodoApp style components\nconst Container = styled.div`\n  max-width: 650px;\n  font-family: 'Baloo 2', sans-serif;\n  margin: 50px auto;\n  text-align: center;\n  padding: 12px;\n`;\n\nconst TodoTittle = styled.h1`\n  font-size: 90px;\n  font-weight: bolder;\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst TodoInputBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n`;\n\nconst TodoInput = styled.input`\n  flex: 1;\n  height: 56px;\n  font-size: 22px;\n  padding: 10px;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n  border: 1px solid ${props => props.theme.colors.border};\n  border-right: transparent;\n`;\n\nconst InputButton = styled.button`\n  height: 56px;\n  width: 60px;\n  font-size: 22px;\n  background-color: ${props => props.theme.colors.light};\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  border: 1px solid ${props => props.theme.colors.dark};\n`;\n\nconst TodoItemBlock = styled.div``;\n\nconst TodoApp = () => {\n  const {\n    inputValue,\n    handleInputChange,\n    todos,\n    handleAddTodo,\n    handleKeyPress,\n    handleDeleteTodo,\n    handleToggleIsChecked,\n    handleEditTodo,\n    filter,\n    filterMap,\n    handleClickAll,\n    handleClickActive,\n    handlClickCompleted,\n    handleClearAllCompleted,\n  } = useTodos();\n\n  return (\n    <Container>\n      <TodoTittle className=\"animate__animated animate__bounceIn\">Todo</TodoTittle>\n      <TodoInputBlock>\n        <TodoInput\n          type=\"text\"\n          placeholder=\"What needs to be done?\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress} />\n        <InputButton onClick={handleAddTodo}>Add</InputButton>\n      </TodoInputBlock>\n      <TodoItemBlock>\n        {\n          todos\n            .filter(filterMap[filter])\n            .map(todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsChecked={handleToggleIsChecked} handleEditTodo={handleEditTodo} />)\n        }\n      </TodoItemBlock>\n      <TodoFilterButton\n        handleClickAll={handleClickAll}\n        handleClickActive={handleClickActive}\n        handlClickCompleted={handlClickCompleted}\n        handleClearAllCompleted={handleClearAllCompleted} />\n    </Container>\n  )\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport TodoApp from './TodoApp';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    primary: '#8a8669',\n    secondary: '#BC9272',\n    normal: '#d1d2ce',\n    border: '#e2e2dc',\n    light: '#f7f7f6',\n    dark: '#828282',\n  }\n}\n\nfunction App() {\n  return <TodoApp />;\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}